library(tidyr)
library(ggplot2)
rawData <- read.csv("C:/Users/wlyjk/Desktop/VISUAL/ass2/Power_Plants.csv", stringsAsFactors = FALSE)
rawData$Cap <- as.numeric(rawData$OPER_CAP)
makePlantPopup <- function(row) {
paste0(strong(row$Name), br(),
'Name: ', row$NAME, br(),
'Type: ',row$NAICS_DESC , br(),
'Cap: ',row$OPER_CAP
)
}
library(leaflet)
library(shiny)
library(ggmap)
library(ggiraph)
library(tidyr)
library(ggplot2)
rawData <- read.csv("C:/Users/wlyjk/Desktop/VISUAL/ass2/Power_Plants.csv", stringsAsFactors = FALSE)
rawData$Cap <- as.numeric(rawData$OPER_CAP)
makePlantPopup <- function(row) {
paste0(strong(row$Name), br(),
'Name: ', row$NAME, br(),
'Type: ',row$NAICS_DESC , br(),
'Cap: ',row$OPER_CAP
)
}
rawData$Popup <- by(rawData, seq_len(nrow(rawData)), makePlantPopup)
library(leaflet)
library(shiny)
library(ggmap)
library(ggiraph)
library(tidyr)
library(ggplot2)
rawData <- read.csv("C:/Users/wlyjk/Desktop/VISUAL/ass2/Power_Plants.csv", stringsAsFactors = FALSE)
rawData$Cap <- as.numeric(rawData$OPER_CAP)
makePlantPopup <- function(row) {
paste0(strong(row$Name), br(),
'Name: ', row$NAME, br(),
'Type: ',row$NAICS_DESC , br(),
'Cap: ',row$Cap
)
}
rawData$Popup <- by(rawData, seq_len(nrow(rawData)), makePlantPopup)
names(providers)
##################
# USER INTERFACE #
##################
births_tab <- tabPanel(
title='UN',
h2('plant in UN'),
sidebarLayout(
sidebarPanel(
selectInput(
inputId='type',
label='Type',
choices=c('All', 'High Carbon'='FOSSIL FUEL ELECTRIC POWER GENERATION',
'Low Carbon'='HYDROELECTRIC POWER GENERATION',
'NUCLEAR ELECTRIC POWER GENERATION',
'BIOMASS ELECTRIC POWER GENERATION',
'SOLAR ELECTRIC POWER GENERATION',
'WIND ELECTRIC POWER GENERATION',
'GEOTHERMAL ELECTRIC POWER GENERATION',
'OTHER ELECTRIC POWER GENERATION'),
selected='All'
)
),
mainPanel(
leafletOutput('map_plant')
)
)
)
ui <- navbarPage(
title='Population growth in Australia',
births_tab,
)
################
# SHINY SERVER #
################
server <- function(input, output, session) {
output$map_plant <- renderLeaflet({
if(input$type != 'All'){
rawData <- rawData[rawData$NAICS_DESC %in% input$type,]
}
leaflet(rawData) %>%
addProviderTiles(providers$CartoDB) %>%
addAwesomeMarkers(lng=~SOURC_LONG, lat=~SOURCE_LAT,
icon=~awesomeIcons(library='fa'),
label=~NAME,
popup=~Popup,
layerId=~NAME)
})
}
#############
# RUN SHINY #
#############
shinyApp(ui, server)
runApp('TEMP.R')
library(shiny); runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('5.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
CLEAR
clear
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
runApp('TEMP.R')
install.packages("httr")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
shiny::runApp('~/GitHub/geom90007-a3/R')
shiny::runApp('~/GitHub/geom90007-a3/R')
install.packages("httr")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("httr")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
shiny::runApp('~/GitHub/geom90007-a3/R')
if (interactive()) {
library(shiny)
# A dashboard header with 3 dropdown menus
headers <- dashboardHeader(
title = "Dashboard Demo",
titleWidth = 250
)
sidebar <- dashboardSidebar(
width = 250,
sidebarMenu(
# Tab for different visualisation
menuItem("Home",
tabName = "home",
selected = T,
icon = icon('thumbs-up')),
menuItem("Places to Visit",
tabName = "poi",
icon = icon('map-location-dot')),
menuItem("Melbourne Weather",
tabName = "weather",
icon = icon('sun')),
menuItem("Pedestrian Volume Monitor",
tabName = "traffic",
icon = icon("users")),
menuItem("Tourism Industry Recovery",
tabName = "tour",
icon = icon('plane')),
menuItem("FAQs",
tabName = "faqs",
icon = icon("question")),
menuItem("Setting",
tabName = "setting",
icon = icon("gear"),
radioButtons("displaymode", "Display Mode", choices = c('Light Mode' = 'lightMode', 'Dark Mode' = 'darkMode'), selected="lightMode"))
)
)
intro_panel <- tabPanel(
title = "Intro",
class = "page-1",
tags$img(class = "logo", src = "./01.svg"),
tags$div(
class = "pages",
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p("Access parking spot availability in Melbourne in real-time.")
),
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p(
"Find spots near your location, filter by how much you want to walk."
)
),
tags$div(
class = "page",
tags$img(src = "./03.svg"),
tags$p(
"It just got easier to live in the most liveable city in the world."
)
)
),
)
faqs_panel <- tabPanel(
title = "faqs",
class = "page-1",
tags$img(class = "logo", src = "./01.svg"),
tags$div(
class = "pages",
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p("Access parking spot availability in Melbourne in real-time.")
),
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p(
"Find spots near your location, filter by how much you want to walk."
)
),
tags$div(
class = "page",
tags$img(src = "./03.svg"),
tags$p(
"It just got easier to live in the most liveable city in the world."
)
)
),
)
weather_panel <- tabPanel(
title = "Melbourne Weather",
icon = icon("sun"),
fluidRow(
box(
title = "Weather Information",
width = 6,
status = "primary",
solidHeader = TRUE,
uiOutput("weather_output")
)
)
)
shinyApp(
ui = dashboardPage(
title = "visit mel",
header = headers,
sidebar = sidebar,
body = dashboardBody(
tabItems(
tabItem("home",
intro_panel
),
tabItem("weather",
weather_panel
),
tabItem("faqs",
faqs_panel
)
)
)
),
server = function(input, output) { }
)
}
if (interactive()) {
library(shiny)
library(shinydashboard)  # Add this line
# A dashboard header with 3 dropdown menus
headers <- dashboardHeader(
title = "Dashboard Demo",
titleWidth = 250
)
sidebar <- dashboardSidebar(
width = 250,
sidebarMenu(
# Tab for different visualisation
menuItem("Home",
tabName = "home",
selected = T,
icon = icon('thumbs-up')),
menuItem("Places to Visit",
tabName = "poi",
icon = icon('map-location-dot')),
menuItem("Melbourne Weather",
tabName = "weather",
icon = icon('sun')),
menuItem("Pedestrian Volume Monitor",
tabName = "traffic",
icon = icon("users")),
menuItem("Tourism Industry Recovery",
tabName = "tour",
icon = icon('plane')),
menuItem("FAQs",
tabName = "faqs",
icon = icon("question")),
menuItem("Setting",
tabName = "setting",
icon = icon("gear"),
radioButtons("displaymode", "Display Mode", choices = c('Light Mode' = 'lightMode', 'Dark Mode' = 'darkMode'), selected="lightMode"))
)
)
intro_panel <- tabPanel(
title = "Intro",
class = "page-1",
tags$img(class = "logo", src = "./01.svg"),
tags$div(
class = "pages",
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p("Access parking spot availability in Melbourne in real-time.")
),
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p(
"Find spots near your location, filter by how much you want to walk."
)
),
tags$div(
class = "page",
tags$img(src = "./03.svg"),
tags$p(
"It just got easier to live in the most liveable city in the world."
)
)
),
)
faqs_panel <- tabPanel(
title = "faqs",
class = "page-1",
tags$img(class = "logo", src = "./01.svg"),
tags$div(
class = "pages",
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p("Access parking spot availability in Melbourne in real-time.")
),
tags$div(
class = "page",
tags$img(src = "./02.svg"),
tags$p(
"Find spots near your location, filter by how much you want to walk."
)
),
tags$div(
class = "page",
tags$img(src = "./03.svg"),
tags$p(
"It just got easier to live in the most liveable city in the world."
)
)
),
)
weather_panel <- tabPanel(
title = "Melbourne Weather",
icon = icon("sun"),
fluidRow(
box(
title = "Weather Information",
width = 6,
status = "primary",
solidHeader = TRUE,
uiOutput("weather_output")
)
)
)
shinyApp(
ui = dashboardPage(
title = "visit mel",
header = headers,
sidebar = sidebar,
body = dashboardBody(
tabItems(
tabItem("home",
intro_panel
),
tabItem("weather",
weather_panel
),
tabItem("faqs",
faqs_panel
)
)
)
),
server = function(input, output) { }
)
}
runApp('~/GitHub/geom90007-a3/R')
runApp('~/GitHub/geom90007-a3/R/main.R')
#' Dependencies used in the app
dependencies <- c(
"rjson",
"jsonlite",
"shiny",
"dplyr",
"janitor",
"tidyr",
"tidyselect",
"readxl",
"ggplot2",
"plotly",
"leaflet",
"rworldmap",
"sp",
"glue",
"colorspace",
"htmltools",
"pracma",
"RSocrata",
"geojsonio",
"shinyalert",
"readr",
"sf",
"leaflet.extras"
)
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
weather
sidebar <- dashboardSidebar(
width = 250,
sidebarMenu(
# Tab for different visualisation
menuItem("Home",
tabName = "home",
selected = T,
icon = icon('thumbs-up')),
menuItem("Places to Visit",
tabName = "poi",
icon = icon('map-location-dot')),
menuItem("Melbourne weather",
tabName = "weather",
icon = icon('sun')),
menuItem("Pedestrian Volume Monitor",
tabName = "traffic",
icon = icon("users")),
menuItem("Tourism Industry Recovery",
tabName = "tour",
icon = icon('plane')),
menuItem("FAQs",
tabName = "faqs",
icon = icon("question")),
menuItem("Setting",
tabName = "setting",
icon = icon("gear"),
radioButtons("displaymode", "Display Mode", choices = c('Light Mode' = 'lightMode', 'Dark Mode' = 'darkMode'), selected="lightMode"))
)
)
runApp('~/GitHub/geom90007-a3/R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/server_weather.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R/main.R')
runApp('~/GitHub/geom90007-a3/R')
shiny::runApp()
runApp('D:/POIs-in-Melbourne-main/POIs-in-Melbourne-main')
runApp('D:/POIs-in-Melbourne-main/POIs-in-Melbourne-main')
library(shiny); runApp('main.R')
runApp('main.R')
library(dashboardthemes)
runApp('D:/geom90007-a3/main.R')
runApp('main.R')
knitr::opts_chunk$set(echo = TRUE)
# Please run the cell to install the required packages
options(install.packages.compile.from.source = "always")
install.packages("igraph", type = "binary")
packages <- c("shiny", "shinythemes", "leaflet", "plotly", "ggplot2",
"dplyr", "owmr", "rgdal", "lubridate", "fontawesome", "shinyWidgets",
"shinydashboard", "dplyr", "tidyr", "stringr", "highcharter", "dashboardthemes")
new.packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
install.packages("igraph", type = "binary")
library(shiny); runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
